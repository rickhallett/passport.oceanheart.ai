spring:
  application:
    name: spring-passport
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/passport_development}
    username: ${DATABASE_USER:postgres}
    password: ${DATABASE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    defer-datasource-initialization: false
  
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    table: schema_version
  
  security:
    oauth2:
      client:
        registration: {}
  
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8
  
  web:
    resources:
      static-locations: classpath:/static/
      cache:
        period: 3600

server:
  port: ${PORT:8080}
  servlet:
    context-path: /
    session:
      cookie:
        name: session_id
        domain: ${COOKIE_DOMAIN:.oceanheart.ai}
        path: /
        http-only: true
        secure: ${COOKIE_SECURE:false}
        same-site: lax
        max-age: 604800  # 1 week
  error:
    include-stacktrace: never
    include-message: always

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized

logging:
  level:
    com.oceanheart.passport: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: '%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n'
    file: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n'

passport:
  cookie-domain: ${COOKIE_DOMAIN:.oceanheart.ai}
  jwt:
    issuer: ${JWT_ISSUER:passport.oceanheart.ai}
    secret: ${SECRET_KEY_BASE:development-secret-key-change-in-production}
    expiration: 604800  # 1 week in seconds
    algorithm: HS256
  rate-limit:
    sign-in:
      attempts: 10
      window: PT3M  # 3 minutes
    api:
      attempts: 100
      window: PT1H  # 1 hour
  cors:
    allowed-origins: ${CORS_ORIGINS:http://localhost:3000,https://*.oceanheart.ai}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    exposed-headers: Authorization,Content-Type

---
spring:
  config:
    activate:
      on-profile: development
  
  datasource:
    url: jdbc:postgresql://localhost:5432/passport_development
    username: postgres
    password: postgres
  
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create-drop

server:
  servlet:
    session:
      cookie:
        domain: .lvh.me
        secure: false

passport:
  cookie-domain: .lvh.me
  cors:
    allowed-origins: http://localhost:3000,http://*.lvh.me:3000

logging:
  level:
    com.oceanheart.passport: DEBUG
    org.springframework.security: TRACE

---
spring:
  config:
    activate:
      on-profile: production
  
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate

server:
  servlet:
    session:
      cookie:
        secure: true

passport:
  cors:
    allowed-origins: https://oceanheart.ai,https://*.oceanheart.ai

logging:
  level:
    root: WARN
    com.oceanheart.passport: INFO
    org.springframework.security: WARN